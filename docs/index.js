(()=>{"use strict";var t,e,r,o,n,s,i,c,a,u={842:function(t,e,r){var o,n=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])},o(t,e)},function(t,e){function r(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)});Object.defineProperty(e,"__esModule",{value:!0}),e.FakeSolver=void 0;var s=function(t){function e(e,r,o){var n=t.call(this,e,r)||this;return n.right=n.getWord(o,!0),n.wrong=n.getWord(o,!1),n}return n(e,t),e.prototype.processTranscript=function(t){t.toLowerCase()===this.right&&this.successCallback()},e.prototype.getWord=function(t,e){var r='p[data-correct="'+e+'"]',o=t.querySelector(r);return(null==o?void 0:o.innerText)||""},e}(r(168).Solver);e.FakeSolver=s},743:function(t,e,r){var o,n=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])},o(t,e)},function(t,e){function r(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)});Object.defineProperty(e,"__esModule",{value:!0}),e.HackWordsSolver=void 0;var s=function(t){function e(e,r,o){var n=t.call(this,e,r)||this;return n.words=Array.from(o.querySelectorAll("p")).map((function(t){return t.innerHTML})),n}return n(e,t),e.prototype.processTranscript=function(t){var e=this.words[0];t.toLowerCase()===e.toLowerCase()&&(this.words.shift(),this.successCallback()),0===this.words.length&&this.successCallback()},e}(r(168).Solver);e.HackWordsSolver=s},349:function(t,e,r){var o,n=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])},o(t,e)},function(t,e){function r(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)});Object.defineProperty(e,"__esModule",{value:!0}),e.TaleSolver=void 0;var s=function(t){function e(e,r,o){var n=t.call(this,e,r)||this;return n.image=o.getAttribute("data-background-image")||"",n.words=Array.from(o.querySelectorAll("span")).map((function(t){return t.innerText})),""!==n.image&&setTimeout(r,5e3),n}return n(e,t),e.prototype.processTranscript=function(t){var e=this.words[0];t.toLowerCase()===e.toLowerCase()&&(this.words.shift(),this.successCallback()),0===this.words.length&&this.successCallback()},e}(r(168).Solver);e.TaleSolver=s},414:function(t,e,r){var o,n=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])},o(t,e)},function(t,e){function r(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)});Object.defineProperty(e,"__esModule",{value:!0}),e.WordsSolver=void 0;var s=function(t){function e(e,r,o){var n,s=t.call(this,e,r)||this;return s.word=(null===(n=o.querySelector("p"))||void 0===n?void 0:n.innerText)||"",s}return n(e,t),e.prototype.processTranscript=function(t){t.toLowerCase()===this.word.toLowerCase()&&this.successCallback()},e}(r(168).Solver);e.WordsSolver=s},168:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Solver=void 0;var r=function(){function t(t,e){var r=this;this.$transcripts=t,this.successCallback=e,this.transcriptListener=function(t){var e=t.detail;r.processTranscript(e)},this.$transcripts.addEventListener("transcript",this.transcriptListener)}return t.prototype.disconnect=function(){this.$transcripts.removeEventListener("transcript",this.transcriptListener)},t}();e.Solver=r},717:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Speecher=void 0;var r=function(){function t(t,e){var r=this;this.speech=t,this.options=e,this.$events=new EventTarget,this.$errors=new EventTarget,this.resultHandler=function(t){return r.handleResult(t)},this.errorHandler=function(t){return r.handleError(t)},this.speech.addEventListener("result",this.resultHandler),this.speech.addEventListener("error",this.errorHandler),this.speech.continuous=!0,this.speech.lang=e.locale,this.speech.start()}return t.prototype.handleResult=function(t){for(var e=this,r=t.results.item(t.results.length-1),o=0;o<r.length;o++)r.item(o).transcript.split(" ").filter((function(t){return!!t})).forEach((function(t){console.log("heard",t),e.$events.dispatchEvent(new CustomEvent("transcript",{detail:t}))}))},t.prototype.handleError=function(t){console.error("recognition error",t.name,t.error),this.$errors.dispatchEvent(new CustomEvent("error",{detail:t.error}))},t.prototype.extractWords=function(t){return t.split(" ").map((function(t){return t.replace(/[^a-záàéèíóòúü]+/gi,"")}))},t}();e.Speecher=r}},l={};function p(t){var e=l[t];if(void 0!==e)return e.exports;var r=l[t]={exports:{}};return u[t].call(r.exports,r,r.exports,p),r.exports}r=p(717),o=p(842),n=p(743),s=p(349),i=p(414),c=function(){var t=Reveal.availableRoutes();console.log("down",t.down,"right",t.right),Reveal.next()},a=function(a){var u=a.currentSlide,l=u.parentElement,p=null==l?void 0:l.getAttribute("data-locale"),h=null==l?void 0:l.getAttribute("data-type");switch(t||(t=new r.Speecher(new webkitSpeechRecognition,{locale:p})),e&&e.disconnect(),h){case"words":e=new i.WordsSolver(t.$events,c,u);break;case"tale":e=new s.TaleSolver(t.$events,c,u);break;case"fake":e=new o.FakeSolver(t.$events,c,u);break;case"hack-words":e=new n.HackWordsSolver(t.$events,c,u)}},Reveal.addEventListener("slidechanged",a),Reveal.addEventListener("ready",a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,